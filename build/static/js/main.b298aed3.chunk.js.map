{"version":3,"sources":["components/BottomText.js","components/ChoiceButton.js","components/MainImage.js","components/NextButton.js","components/TopText.js","components/EndScene.js","components/StartButton.js","components/BackButton.js","components/StartAgainButton.js","containers/MainContainer.js","App.js","reportWebVitals.js","index.js"],"names":["BottomText","sceneId","sceneData","className","bottom_text","ChoiceButton","handleClick","myButtons","buttons","map","b","key","value","next_scene_id","onClick","text","MainImage","src","image","alt","NextButton","TopText","top_text","EndScene","StartButton","BackButton","StartAgainButton","MainContainer","useState","currentSceneId","setCurrentSceneId","data","allData","setAllData","currentSceneData","setcurrentSceneData","isLoaded","setIsLoaded","scenePath","setScenePath","useEffect","find","element","id","fetchCurrentSceneData","newScenePath","concat","end","next","index","length","newId","pop","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b298aed3.chunk.js","sourcesContent":["import React from \"react\";\n\nconst BottomText = ({sceneId, sceneData}) => {\n\n    return (\n        <div className=\"bottom-text\">\n            {sceneData.bottom_text}\n        </div>\n    );\n}\n\nexport default BottomText;","import React from \"react\";\n\nconst ChoiceButton = ({ sceneData, handleClick}) => {\n    \n    const myButtons = sceneData.buttons.map((b, key) => {\n        return (\n            <button className=\"choice-button\" key={key} value={b.next_scene_id} onClick={() => handleClick(b.next_scene_id)}>{b.text}</button>\n        )\n    })\n \n    return (\n        <div className=\"choice-button-div\">\n            {myButtons}   \n        </div>\n    );\n}\n\nexport default ChoiceButton;","import React from \"react\";\n\nconst MainImage = ({sceneData}) => {\n\n    return (\n        <div className=\"main-image-div\">\n            <img className=\"main-image\" src={sceneData.image} alt=\"Girl in a jacket\"></img>\n        </div>\n    );\n}\n\nexport default MainImage;","import React from \"react\";\n\nconst NextButton = ({sceneData, handleClick}) => {\n\n    return (\n        <div className=\"next-button-div\">\n            <button className=\"next-button\" onClick={() => handleClick(sceneData.next_scene_id)}>Next</button>\n        </div>\n    );\n}\n\nexport default NextButton;","import React from \"react\";\n\nconst TopText = ({sceneId, sceneData}) => {\n\n    return (\n        <div className=\"top-text\">\n            {sceneData.top_text}\n        </div>\n    );\n}\n\nexport default TopText;","import React from \"react\";\n\nconst EndScene = () => {\n\n    return (\n        <div className=\"end-text-div\">\n            <p className=\"end-text\">The End.</p>\n        </div>\n    );\n}\n\nexport default EndScene;","import React from \"react\";\n\nconst StartButton = ({sceneData, handleClick}) => {\n\n    return (\n        <div className=\"next-button-div\">\n            <button className=\"next-button\" onClick={() => handleClick(sceneData.next_scene_id)}>Enter</button>\n        </div>\n    );\n}\n\nexport default StartButton;","import React from \"react\";\n\nconst BackButton = ({sceneData, handleClick}) => {\n\n    return (\n        <div className=\"next-button-div\">\n            \n            <button className=\"back-button\" onClick={() => handleClick()}><i className=\"fas fa-arrow-left fa-3x\"></i></button>\n        </div>\n    );\n}\n\nexport default BackButton;","import React from \"react\";\n\nconst StartAgainButton = ({handleClick}) => {\n\n    return (\n        <div className=\"next-button-div\">\n            \n            <button className=\"start-again\" onClick={() => handleClick()}>Start Again</button>\n        </div>\n    );\n}\n\nexport default StartAgainButton;","import React, { useEffect, useState } from \"react\";\nimport BottomText from \"../components/BottomText\";\nimport ChoiceButton from \"../components/ChoiceButton\";\nimport MainImage from \"../components/MainImage\";\nimport NextButton from \"../components/NextButton\";\nimport TopText from \"../components/TopText\";\nimport EndScene from \"../components/EndScene\";\nimport StartButton from \"../components/StartButton\";\nimport BackButton from \"../components/BackButton\";\nimport StartAgainButton from \"../components/StartAgainButton\";\nimport * as data from \"../scenes.json\";\n\nconst MainContainer = () => {\n    const [currentSceneId, setCurrentSceneId] = useState(0);\n    const [allData, setAllData] = useState(data.default);\n    const [currentSceneData, setcurrentSceneData] = useState({});\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [scenePath, setScenePath] = useState([0]);\n\n\n    useEffect(() => {\n        const fetchCurrentSceneData = () => {\n            let sceneData = allData.find((element) => {\n                return element.id === currentSceneId\n            })\n            setcurrentSceneData(sceneData);\n            setIsLoaded(true)\n        }\n       fetchCurrentSceneData();\n    }, [currentSceneId, allData]) \n\n\n    const handleClick = (sceneId) => {\n       setIsLoaded(false);\n       setCurrentSceneId(sceneId);\n       const newScenePath = scenePath.concat([sceneId]);\n       setScenePath(newScenePath);\n    }\n\n\n    const handleBackClick = () => {\n        setIsLoaded(false);\n        const index = scenePath.length - 2;\n        const newId = scenePath[index];\n        setCurrentSceneId(newId);\n        scenePath.pop();\n    }\n\n\n   const handleStartAgainClick = () => {\n    setIsLoaded(false);\n    setCurrentSceneId(0);\n    setScenePath([0]);\n    setAllData(data.default)\n    }\n\n\n    return (\n         \n        <div className=\"all-content\">\n            <div className=\"main-content-div\">\n                <TopText sceneId={currentSceneId} sceneData={currentSceneData}/>\n                <MainImage sceneId={currentSceneId} sceneData={currentSceneData}/>\n                <BottomText sceneId={currentSceneId} sceneData={currentSceneData}/>\n                {currentSceneData.end && <EndScene/>}\n            </div>\n            <div className=\"buttons-div\">\n                {currentSceneId!==0 && isLoaded && !currentSceneData.next && !currentSceneData.end && <ChoiceButton sceneId={currentSceneId} sceneData={currentSceneData} allData={allData} isLoaded={isLoaded} handleClick={handleClick}/> }\n                {currentSceneId===0 && <StartButton sceneData={currentSceneData} handleClick={handleClick}/>}\n                {currentSceneId!==0 &&currentSceneData.next && !currentSceneData.end && <NextButton sceneData={currentSceneData} handleClick={handleClick} /> }\n                {currentSceneData.end && <StartAgainButton handleClick={handleStartAgainClick} /> }\n                {currentSceneId!==0 && <BackButton handleClick={handleBackClick} /> } \n            </div>\n\n        </div>\n        \n    );\n}\n\nexport default MainContainer;","import './App.css';\nimport MainContainer from \"./containers/MainContainer\"\n\nfunction App() {\n  return <MainContainer/>; \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}